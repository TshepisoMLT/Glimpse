name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  check-updates:
    name: Check for Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated packages
        id: outdated
        run: |
          OUTDATED=$(npm outdated --json || echo "{}")
          echo "outdated=$OUTDATED" >> $GITHUB_OUTPUT
          echo "OUTDATED_PACKAGES=$OUTDATED" >> $GITHUB_ENV

      - name: Create issue if updates available
        if: env.OUTDATED_PACKAGES != '{}'
        uses: actions/github-script@v7
        with:
          script: |
            const outdated = JSON.parse('${{ env.OUTDATED_PACKAGES }}');
            const packages = Object.keys(outdated);
            
            if (packages.length > 0) {
              const body = `## ðŸ“¦ Dependency Updates Available
              
              The following packages have updates available:
              
              ${packages.map(pkg => `- **${pkg}**: ${outdated[pkg].current} â†’ ${outdated[pkg].latest}`).join('\n')}
              
              ### To update:
              1. Run \`npm update\` to update within version constraints
              2. Run \`npm audit fix\` to fix security issues
              3. Test the app thoroughly after updates
              4. Create a PR with the changes
              
              ### Manual steps:
              - Review each package update
              - Check for breaking changes
              - Update this issue when resolved
              
              ---
              *This issue was created by GitHub Actions*`;
              
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `ðŸ“¦ ${packages.length} Dependency Updates Available`,
                body: body,
                labels: ['dependencies', 'automation', 'enhancement']
              });
            }

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        id: audit
        run: |
          AUDIT_RESULT=$(npm audit --audit-level=moderate --json || echo "{}")
          echo "audit_result=$AUDIT_RESULT" >> $GITHUB_OUTPUT
          echo "AUDIT_RESULT=$AUDIT_RESULT" >> $GITHUB_ENV

      - name: Create security issue if vulnerabilities found
        if: env.AUDIT_RESULT != '{}'
        uses: actions/github-script@v7
        with:
          script: |
            const audit = JSON.parse('${{ env.AUDIT_RESULT }}');
            
            if (audit.metadata && audit.metadata.vulnerabilities) {
              const vulns = audit.metadata.vulnerabilities;
              const totalVulns = Object.values(vulns).reduce((sum, count) => sum + count, 0);
              
              if (totalVulns > 0) {
                const body = `## ðŸ”’ Security Vulnerabilities Found
                
                **Total vulnerabilities**: ${totalVulns}
                
                **Breakdown**:
                - Critical: ${vulns.critical || 0}
                - High: ${vulns.high || 0}
                - Moderate: ${vulns.moderate || 0}
                - Low: ${vulns.low || 0}
                
                ### To fix:
                1. Run \`npm audit fix\` to automatically fix issues
                2. Run \`npm audit\` to see detailed report
                3. Manually update packages if needed
                4. Test thoroughly after fixes
                
                ### Manual steps:
                - Review each vulnerability
                - Check for breaking changes
                - Update this issue when resolved
                
                ---
                *This issue was created by GitHub Actions*`;
                
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: `ðŸ”’ ${totalVulns} Security Vulnerabilities Found`,
                  body: body,
                  labels: ['security', 'automation', 'bug']
                });
              }
            } 